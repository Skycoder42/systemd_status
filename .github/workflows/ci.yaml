name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  rpc_ci:
    name: systemd_status_rpc - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    with:
      workingDirectory: systemd_status_rpc
      buildRunner: true
      unitTestPaths: ""
  rpc_package:
    name: systemd_status_rpc - Package
    uses: Skycoder42/dart_test_tools/.github/workflows/package.yml@main
    needs:
      - rpc_ci
    with:
      workingDirectory: systemd_status_rpc
      buildRunner: true

  client_ci:
    name: systemd_status_client - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    needs:
      - rpc_package
    with:
      workingDirectory: systemd_status_client
      artifactDependencies: systemd_status_rpc
      unitTestPaths: ""
  client_package:
    name: systemd_status_client - Package
    uses: Skycoder42/dart_test_tools/.github/workflows/package.yml@main
    needs:
      - rpc_package
      - client_ci
    with:
      workingDirectory: systemd_status_client
      artifactDependencies: systemd_status_rpc

  server_ci:
    name: systemd_status_server - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    needs:
      - rpc_package
    with:
      workingDirectory: systemd_status_server
      artifactDependencies: systemd_status_rpc
      buildRunner: true
      unitTestPaths: ""
  server_cd:
    name: systemd_status_server - CD
    uses: Skycoder42/dart_test_tools/.github/workflows/compile.yml@main
    needs:
      - rpc_package
      - server_ci
    permissions:
      contents: write
    with:
      enabledPlatforms: ${{ needs.server_ci.outputs.enabledPlatforms }}
      workingDirectory: systemd_status_server
      artifactDependencies: systemd_status_rpc
      buildRunner: true
      archivePrefix: systemd-status-server
      tagPrefix: server/v

  bridge_ci:
    name: systemd_status_bridge - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    needs:
      - rpc_package
      - client_package
    with:
      workingDirectory: systemd_status_bridge
      artifactDependencies: >-
        systemd_status_rpc
        systemd_status_client
      buildRunner: true
      unitTestPaths: ""
  bridge_cd:
    name: systemd_status_bridge - Compile and Release
    uses: Skycoder42/dart_test_tools/.github/workflows/compile.yml@main
    needs:
      - rpc_package
      - client_package
      - bridge_ci
    permissions:
      contents: write
    with:
      enabledPlatforms: ${{ needs.bridge_ci.outputs.enabledPlatforms }}
      workingDirectory: systemd_status_bridge
      artifactDependencies: >-
        systemd_status_rpc
        systemd_status_client
      buildRunner: true
      archivePrefix: systemd-status-systemctl-bridge
      tagPrefix: bridge/v
      releaseRef: refs/heads/server_pod
  bridge_deploy:
    name: systemd_status_bridge - Create debian package
    needs:
      - bridge_cd
    if: needs.bridge_cd.outputs.releaseCreated == 'true'
    uses: Skycoder42/dart_test_tools/.github/workflows/deb.yml@main
    with:
      workingDirectory: systemd_status_bridge
      packagecloudRepository: systemd_status_bridge/ubuntu/jammy
    secrets:
      packagecloudToken: ${{ secrets.PACKAGECLOUD_TOKEN }}

  flutter_ci:
    name: systemd_status_flutter - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/flutter.yml@main
    needs:
      - rpc_package
      - client_package
    with:
      workingDirectory: systemd_status_flutter
      artifactDependencies: >-
        systemd_status_rpc
        systemd_status_client
      buildRunner: true
      unitTestPaths: ""
  # flutter_cd:
  #   name: systemd_status_flutter - CD
  #   uses: Skycoder42/dart_test_tools/.github/workflows/deploy.yml@main
  #   needs:
  #     - rpc_package
  #     - client_package
  #     - flutter_ci
  #   with:
  #     enabledPlatforms: ${{ needs.flutter_ci.outputs.enabledPlatforms }}
  #     workingDirectory: systemd_status_flutter
  #     artifactDependencies: >-
  #       systemd_status_rpc
  #       systemd_status_client
  #     tagPrefix: flutter/v
  #     googlePlayTrack: internal
  #     googlePlayReleaseStatus: draft
  #   secrets:
  #     keystore: ${{ secrets.UPLOAD_KEYSTORE }}
  #     keystorePassword: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}
  #     googlePlayKey: ${{ secrets.GOOGLE_PLAY_KEY }}
