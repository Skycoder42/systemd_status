name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  rpc_ci:
    name: systemd_status_rpc - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    with:
      workingDirectory: systemd_status_rpc
      buildRunner: true
      unitTestPaths: ""
  rpc_package:
    name: systemd_status_rpc - Package
    uses: Skycoder42/dart_test_tools/.github/workflows/package.yml@main
    needs:
      - rpc_ci
    with:
      workingDirectory: systemd_status_rpc
      buildRunner: true

  client_ci:
    name: systemd_status_client - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    needs:
      - rpc_package
    with:
      workingDirectory: systemd_status_client
      artifactDependencies: systemd_status_rpc
      unitTestPaths: ""
  client_package:
    name: systemd_status_client - Package
    uses: Skycoder42/dart_test_tools/.github/workflows/package.yml@main
    needs:
      - rpc_package
      - client_ci
    with:
      workingDirectory: systemd_status_client
      artifactDependencies: systemd_status_rpc

  server_ci:
    name: systemd_status_server - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    needs:
      - rpc_package
    with:
      workingDirectory: systemd_status_server
      artifactDependencies: systemd_status_rpc
      buildRunner: true
      unitTestPaths: ""
  server_cd:
    name: systemd_status_server - CD
    uses: Skycoder42/dart_test_tools/.github/workflows/compile.yml@main
    needs:
      - rpc_package
      - server_ci
    permissions:
      contents: write
    with:
      enabledPlatforms: ${{ needs.server_ci.outputs.enabledPlatforms }}
      workingDirectory: systemd_status_server
      artifactDependencies: systemd_status_rpc
      buildRunner: true
      archivePrefix: systemd-status-server
      tagPrefix: server/v
      releaseRef: refs/heads/server_pod
  server_deploy:
    name: systemd_status_server - Publish docker image
    uses: Skycoder42/dart_test_tools/.github/workflows/docker.yml@main
    needs:
      - server_cd
    if: needs.server_cd.outputs.releaseCreated == 'true'
    with:
      imageName: skycoder42/systemd-status-server
      version: ${{ needs.server_cd.outputs.releaseVersion }}
      dockerPlatforms: linux/amd64,linux/arm64
    secrets:
      dockerHubUsername: ${{ secrets.DOCKER_USERNAME }}
      dockerHubToken: ${{ secrets.DOCKER_TOKEN }}

  bridge_ci:
    name: systemd_status_bridge - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    needs:
      - rpc_package
      - client_package
    with:
      workingDirectory: systemd_status_bridge
      artifactDependencies: >-
        systemd_status_rpc
        systemd_status_client
      buildRunner: true
      unitTestPaths: ""
  bridge_cd:
    name: systemd_status_bridge - Compile and Release
    uses: Skycoder42/dart_test_tools/.github/workflows/compile.yml@main
    needs:
      - rpc_package
      - client_package
      - bridge_ci
    permissions:
      contents: write
    with:
      enabledPlatforms: ${{ needs.bridge_ci.outputs.enabledPlatforms }}
      workingDirectory: systemd_status_bridge
      artifactDependencies: >-
        systemd_status_rpc
        systemd_status_client
      buildRunner: true
      archivePrefix: systemd-status-systemctl-bridge
      tagPrefix: bridge/v
      releaseRef: refs/heads/server_pod
  bridge_deploy:
    name: systemd_status_bridge - Create debian package
    needs:
      - bridge_cd
    if: needs.bridge_cd.outputs.releaseCreated == 'true'
    uses: Skycoder42/dart_test_tools/.github/workflows/deb.yml@main
    with:
      workingDirectory: systemd_status_bridge
      packagecloudRepository: systemd_status/ubuntu/jammy
    secrets:
      packagecloudToken: ${{ secrets.PACKAGECLOUD_TOKEN }}

  flutter_ci:
    name: systemd_status_flutter - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/flutter.yml@main
    needs:
      - rpc_package
      - client_package
    with:
      workingDirectory: systemd_status_flutter
      artifactDependencies: >-
        systemd_status_rpc
        systemd_status_client
      buildRunner: true
      unitTestPaths: ""
  # flutter_cd:
  #   name: systemd_status_flutter - CD
  #   uses: Skycoder42/dart_test_tools/.github/workflows/deploy.yml@main
  #   needs:
  #     - rpc_package
  #     - client_package
  #     - flutter_ci
  #   with:
  #     enabledPlatforms: ${{ needs.flutter_ci.outputs.enabledPlatforms }}
  #     workingDirectory: systemd_status_flutter
  #     artifactDependencies: >-
  #       systemd_status_rpc
  #       systemd_status_client
  #     tagPrefix: flutter/v
  #     googlePlayTrack: internal
  #     googlePlayReleaseStatus: draft
  #   secrets:
  #     keystore: ${{ secrets.UPLOAD_KEYSTORE }}
  #     keystorePassword: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}
  #     googlePlayKey: ${{ secrets.GOOGLE_PLAY_KEY }}
  flutter_build_linux:
    name: systemd_status_flutter - Build Linux app
    needs:
      - rpc_package
      - client_package
      - flutter_ci
    runs-on: ubuntu-latest
    steps:
      - name: Install flutter dependencies
        run: |
          set -e
          sudo apt-get -qq update
          sudo apt-get -qq install ninja-build libgtk-3-dev
      - name: Install Flutter-SDK (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Download flutter binary artifacts
        run: flutter precache --universal --linux
      - name: Validate flutter setup
        run: flutter doctor -v
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: package-*
          path: ${{ runner.temp }}/.artifacts
      - name: Create pubspec_overrides.yaml for required packages
        run: |
          set -eo pipefail
          touch pubspec_overrides.yaml
          for package in systemd_status_rpc systemd_status_client; do
            yq -i ".dependency_overrides.$package.path=\"${{ runner.temp }}/.artifacts/package-$package\"" pubspec_overrides.yaml
          done
        working-directory: systemd_status_flutter
      - name: Restore dart packages
        run: flutter pub get
        working-directory: systemd_status_flutter
      - name: Create build files
        run: flutter pub run build_runner build --release
        working-directory: systemd_status_flutter
      - name: Build linux app
        run: >-
          flutter build linux
          --release
          --obfuscate --split-debug-info=build/debug-info
          --target-platform linux-x64
        working-directory: systemd_status_flutter
      - name: Create artifact directory
        run: mkdir -p '${{ runner.temp }}/artifact'
      - name: Archive linux app
        run: tar -cJf '${{ runner.temp }}/artifact/bundle.tar.xz' bundle
        working-directory: systemd_status_flutter/build/linux/x64/release
      - name: Copy flatpak files to artifact
        run: cp -a linux/flatpak '${{ runner.temp }}/artifact/flatpak'
        working-directory: systemd_status_flutter
      - name: Upload app archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-linux
          path: ${{ runner.temp }}/artifact
  flutter_package_linux:
    name: systemd_status_flutter - Build flatpak bundle
    needs:
      - flutter_build_linux
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-23.08
      options: --privileged
    steps:
      - name: Download app archive artifact
        uses: actions/download-artifact@v4
        with:
          name: app-linux
          path: artifact
      - name: Extract app bundle
        run: tar -xf bundle.tar.xz
        working-directory: artifact
      - name: Build flatpak
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v6
        with:
          bundle: de.skycoder42.systemdStatusFlutter.flatpak
          manifest-path: artifact/flatpak/de.skycoder42.systemdStatusFlutter.yaml
      - name: Debug log
        run: find .
        if: always()
