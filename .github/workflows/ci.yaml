name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  server_ci:
    name: Server - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    with:
      workingDirectory: server
      buildRunner: true
      unitTestPaths: ""

  server_package:
    name: Server - package
    uses: Skycoder42/dart_test_tools/.github/workflows/package.yml@main
    needs:
      - server_ci
    with:
      workingDirectory: server
      buildRunner: true

  server_cd:
    name: Server - Compile and Release
    uses: Skycoder42/dart_test_tools/.github/workflows/compile.yml@main
    needs:
      - server_ci
    permissions:
      contents: write
    with:
      enabledPlatforms: ${{ needs.server_ci.outputs.enabledPlatforms }}
      workingDirectory: server
      buildRunner: true
      archivePrefix: systemd-status-server
      tagPrefix: server/v

  client_ci:
    name: Client - CI
    uses: Skycoder42/dart_test_tools/.github/workflows/flutter.yml@main
    needs:
      - server_package
    with:
      workingDirectory: client
      artifactDependencies: systemd_status_server
      buildRunner: true
      unitTestPaths: ""

  client_build_android:
    name: Client - Build android bundle
    needs:
      - server_package
      - client_ci
    uses: Skycoder42/dart_test_tools/.github/workflows/build-android.yml@main
    with:
      workingDirectory: client
      artifactDependencies: systemd_status_server
      buildRunner: true
    secrets:
      keystore: ${{ secrets.KEYSTORE }}
      keystorePassword: ${{ secrets.KEYSTORE_PASSWORD }}

  client_build_linux:
    name: Client - Build flatpak bundles
    needs:
      - server_package
      - client_ci
    uses: Skycoder42/dart_test_tools/.github/workflows/build-linux.yml@main
    with:
      workingDirectory: client
      artifactDependencies: systemd_status_server
      manifestPath: linux/flatpak/de.skycoder42.systemdStatusClient.yaml
      bundleName: de.skycoder42.systemdStatusClient.flatpak
      flatpakPlatformImage: flatpak-github-actions:freedesktop-23.08
    secrets:
      gpgKeyId: ${{ secrets.GPG_KEY_ID }}
      gpgKey: ${{ secrets.GPG_KEY }}

  client_build_windows:
    name: Client - Build msix installer
    needs:
      - server_package
      - client_ci
    uses: Skycoder42/dart_test_tools/.github/workflows/build-windows.yml@main
    with:
      workingDirectory: client
      artifactDependencies: systemd_status_server
      buildRunner: true

  client_build_macos:
    name: Client - Build DMG image
    needs:
      - server_package
      - client_ci
    uses: Skycoder42/dart_test_tools/.github/workflows/build-macos.yml@main
    with:
      workingDirectory: client
      artifactDependencies: systemd_status_server
      buildRunner: true
      dmgConfigPath: macos/dmg-config.json

  client_build_web:
    name: Client - Build web archive
    needs:
      - server_package
      - client_ci
    uses: Skycoder42/dart_test_tools/.github/workflows/build-web.yml@main
    with:
      workingDirectory: client
      artifactDependencies: systemd_status_server
      buildRunner: true
      baseHref: /app/

  client_deploy:
    name: Client - Deploy
    uses: Skycoder42/dart_test_tools/.github/workflows/deploy.yml@main
    needs:
      - client_ci
      - client_build_android
      - client_build_linux
      - client_build_windows
      - client_build_macos
      - client_build_web
    permissions:
      contents: write
    with:
      enabledPlatforms: ${{ needs.client_ci.outputs.enabledPlatforms }}
      workingDirectory: client
      tagPrefix: client/v
      targetRepo: Skycoder42/homebrew-systemd_status
    secrets:
      gpgKeyId: ${{ secrets.GPG_KEY_ID }}
      gpgKey: ${{ secrets.GPG_KEY }}
      targetRepoToken: ${{ secrets.HOMEBREW_REPO_PAT }}
      googlePlayKey: ${{ secrets.GOOGLE_PLAY_KEY }}

  server_deploy:
    name: Server - Deploy
    needs:
      - server_cd
      - client_deploy
    if: needs.server_cd.outputs.releaseCreated == 'true'
    uses: Skycoder42/dart_test_tools/.github/workflows/deb.yml@main
    with:
      workingDirectory: server
      packagecloudRepository: systemd_status/ubuntu/jammy
    secrets:
      packagecloudToken: ${{ secrets.PACKAGECLOUD_TOKEN }}
